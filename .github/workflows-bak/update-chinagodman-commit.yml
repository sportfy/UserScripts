name: 人民的勤务员更新脚本

on:
    push:
        paths:
            - "Script details/**/*.js" #新的脚本被提交或者被修改了.
    workflow_dispatch: # 允许手动触发工作流

concurrency:
    group: u1pdate-qinwuyuan-UserScripts # 将所有运行中的实例放到同一个并发组中
    cancel-in-progress: false # 如果有正在执行的工作流，不取消，而是排队

jobs:
    update-chinagodman-commit:
        runs-on: ubuntu-latest
        env:
          GIT_AUTHOR_NAME: ${{ github.event.commits[0].author.name }}
          GIT_AUTHOR_EMAIL: ${{ github.event.commits[0].author.email }}
          GIT_COMMITTER_NAME: qinwuyuan-sync-bot
          GIT_COMMITTER_EMAIL: "${{ secrets.GPG_PRIVATE_EMAIL }}"

        steps:
            - name: 检出代码
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  token: ${{ secrets.MY_GITHUB_TOKEN }}

            - name: 获取提交者用户名
              id: get_git_username
              run: |
                  git_username=$(git log -1 --pretty=format:'%cn')  # 获取最后一次提交的用户名
                  echo "git_username=$git_username" >> $GITHUB_ENV  # 将用户名存入环境变量
                  echo "最新的提交者用户名是: $git_username"

            - name: 检查提交者是否为 github-actions[bot]
              if: ${{ env.git_username != 'github-actions[bot]' }} # 只有当提交者不是 github-actions[bot] 时才执行 自己提交时触发此任务.用于更新触发更新仓库列表流程
              run: echo "提交者不是 github-actions[bot]，继续执行工作流。"

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                 node-version: '16'  
          
            - name: 设置 Python 环境
              if: ${{ env.git_username != 'github-actions[bot]' }} # 只有当提交者不是 github-actions[bot] 时才执行
              uses: actions/setup-python@v2
              with:
                  python-version: "3.x"

            - name: 获取当前分支
              if: ${{ env.git_username != 'github-actions[bot]' }} # 只有当提交者不是 github-actions[bot] 时才执行
              id: get_branch
              run: |
                  echo "当前分支: $(git rev-parse --abbrev-ref HEAD)"
                  echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

            - name: 拉取最新更改
              if: ${{ env.git_username != 'github-actions[bot]' }} # 只有当提交者不是 github-actions[bot] 时才执行
              run: |
                  git pull origin ${{ env.branch }}

            - name: Escape backticks in commit msg
              env:
                COMMIT_MSG: ${{ github.event.head_commit.message }}
              run: |
                 echo "ESCAPED_MSG<<EOF" >> $GITHUB_ENV
                 echo "$COMMIT_MSG" | sed 's/`/\`/g' >> $GITHUB_ENV
                 echo "EOF" >> $GITHUB_ENV
          
            - name: 根目录脚本__更新py
              if: ${{ env.git_username != 'qinwuyuan-sync-bot' }} # 只有当提交者不是 github-actions[bot] 时才执行
              run: |
                  # 复制 `Script details` 目录中的所有 .js 文件到根目录，强制覆盖
                  python pythonscr/copy_js_files.py

            - name: 提交和推送更改
              if: ${{ env.git_username != 'qinwuyuan-sync-bot' }} # 只有当提交者不是 github-actions[bot] 时才执行
              run: |
                  
                 

                  # 添加更改
                  git pull
                  
                  gpg --batch --import <(echo "${{ secrets.GPG_PRIVATE_KEY }}")

                  
                  git config --global user.signingkey  "${{ secrets.GPG_PRIVATE_ID }}"  # 配置 GPG 密钥
                  git add .
                  git commit  -S -m "$ESCAPED_MSG" || echo "没有需要提交的更改"
                  git push origin ${{ env.branch }}
              env:
                  MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
